@import "syntax-variables";

atom-text-editor {
    background-color: @syntax-background-color;
    color: @syntax-text-color;

    .wrap-guide {
        background-color: @syntax-wrap-guide-color;
    }

    .indent-guide {
        color: @syntax-indent-guide-color;
    }

    .invisible-character {
        color: @syntax-invisible-character-color;
    }

    .gutter {
        background-color: @syntax-gutter-background-color;
        color: @syntax-gutter-text-color;

        .line-number {
            &.cursor-line {
                background-color: @syntax-gutter-background-color-selected;
                color: @syntax-gutter-text-color-selected;
            }

            &.cursor-line-no-selection {
                color: @syntax-gutter-text-color-selected;
            }
        }
    }

    .gutter .line-number.folded,
    .gutter .line-number:after,
    .fold-marker:after {
        color: @light-gray;
    }

    .invisible {
        color: @syntax-text-color;
    }

    .cursor {
        color: @syntax-cursor-color;
    }

    .selection .region {
        background-color: @syntax-selection-color;
    }
}

atom-text-editor .search-results .syntax--marker .region {
    background-color: transparent;
    border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
    border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
    color: gray;
}

.syntax--keyword {
    color: @orange;

    &.syntax--control {
        color: lighten(@red, 19%);

        &.syntax--import {
            color: @blue;
        }

        &.syntax--directive.syntax--conditional.syntax--c {
            color: @green;
        }
    }

    &.syntax--operator {
        color: @syntax-text-color;

        &.syntax--logical {
            color: lighten(@red, 19%);
        }

        &.syntax--instanceof {
            color: @light-orange;
        }
    }

    &.syntax--other.syntax--special-method {
        color: @blue;
    }

    &.syntax--other {
        color: @light-orange;

        &.syntax--java {
            color: @aqua;
        }

        &.syntax--import {
            color: @aqua;
        }
    }

    &.syntax--other.syntax--unit {
        color: @light-orange;
    }
}

.syntax--storage {
    color: lighten(@red, 19%);

    &.syntax--modifier.syntax--java{
        color: @light-orange;
        &.syntax--package {
            color: @syntax-text-color;
        }
    }

    &.syntax--type {
        color: @syntax-text-color;
        &.syntax--primitive.syntax--java {
            color: @yellow;
        }
        &.syntax--function.syntax--python {
            color: lighten(@red, 19%);
        }
        &.syntax--annotation {
            color: @blue;
        }
        &.syntax--c {
            color: @yellow;
        }

        &.syntax--class.syntax--python {
            color: lighten(@red, 19%);
        }
    }
}

.syntax--constant {
    color: @purple;

    &.syntax--character.syntax--escape {
        color: @light-orange;
    }

    &.syntax--numeric {
        color: darken(@purple, 5%);
    }

    &.syntax--other.syntax--color {
        color: @cyan;
    }

    &.syntax--other.syntax--symbol {
        color: @green;
    }

    &.syntax--language.syntax--python {
        color: @light-orange;
    }
}

.syntax--variable {
    color: @blue;

    &.syntax--java {
        color: @syntax-text-color;
    }

    &.syntax--interpolation {
        color: darken(@red, 10%);
    }

    &.syntax--parameter.syntax--function {
        color: @syntax-text-color;
    }

    &.syntax--other.syntax--normal.syntax--shell {
        color: @aqua;
    }

    &.syntax--other.syntax--loop.syntax--shell {
        color: @syntax-text-color;
    }

    &.syntax--language.syntax--self.syntax--python {
        color: @yellow;
    }
}

.syntax--invalid.syntax--illegal {
    background-color: @light-red;
    color: @syntax-background-color;
}

.syntax--string {
    color: @green;


    &.syntax--regexp {
        color: @cyan;

        .syntax--source.syntax--ruby.syntax--embedded {
            color: @orange;
        }
    }

    &.syntax--other.syntax--link {
        color: @red;
    }
}

.syntax--punctuation {
    &.syntax--definition {
        &.syntax--comment {
            color: gray;
        }

        &.syntax--string.syntax--shell {
            color: @syntax-text-color;
        }

        &.syntax--inheritance.syntax--python {
            color: @syntax-text-color;
        }

        //&.syntax--string,
        &.syntax--variable,
        &.syntax--parameters,
        &.syntax--array {
            color: @syntax-text-color;

            &.syntax--shell {
                color: @aqua;
            }
        }

        &.syntax--heading,
        &.syntax--identity {
            color: @blue;
        }

        &.syntax--bold {
            color: @light-orange;
            font-weight: bold;
        }

        &.syntax--italic {
            color: @purple;
            font-style: italic;
        }
    }

    &.syntax--section.syntax--embedded {
        color: darken(@red, 10%);
    }

}

.syntax--support {
    &.syntax--class {
        color: @light-orange;
    }

    &.syntax--function  {
        color: @light-orange;

        &.syntax--any-method {
            color: @blue;
        }
        &.syntax--magic.syntax--python {
            color: @aqua;
        }
    }
    &.syntax--type.syntax--exception {
        color: @purple;
    }
}

.syntax--entity {
    &.syntax--name.syntax--function {
        color: @aqua;
    }
    &.syntax--name.syntax--type {
        color: @light-orange;
        text-decoration: underline;

        &.syntax--class.syntax--python {
            color: @aqua;
        }
    }

    &.syntax--name.syntax--type.syntax--class.syntax--java {
        color: @syntax-text-color;
    }

    &.syntax--other.syntax--inherited-class {
        color: @green;
    }
    &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
        color: @light-orange;
    }

    &.syntax--name.syntax--section {
        color: @blue;
    }

    &.syntax--name.syntax--tag {
        color: @aqua;
        text-decoration: underline;
        &.syntax--scss {
            color: lighten(@red, 19%);
        }
    }

    &.syntax--other.syntax--attribute-name {
        color: @yellow;

        &.syntax--id {
            color: @blue;
        }
    }
}

.syntax--meta {
    &.syntax--class {
        color: @light-orange;
    }

    &.syntax--link {
        color: @orange;
    }

    &.syntax--require {
        color: @blue;
    }

    &.syntax--selector {
        color: @purple;
    }

    &.syntax--method {
        color: @syntax-text-color;
    }

    &.syntax--separator {
        background-color: @gray;
        color: @syntax-text-color;
    }

    &.syntax--scope.syntax--case-clause-body.syntax--shell {
        color: @blue;
    }
}

.syntax--none {
    color: @syntax-text-color;
}

.syntax--markup {
    &.syntax--bold {
        color: @orange;
        font-weight: bold;
    }

    &.syntax--changed {
        color: @purple;
    }

    &.syntax--deleted {
        color: @red;
    }

    &.syntax--italic {
        color: @purple;
        font-style: italic;
    }

    &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
        color: @blue;
    }

    &.syntax--nserted {
        color: @green;
    }

    &.syntax--list {
        color: @red;
    }

    &.syntax--quote {
        color: @orange;
    }

    &.syntax--raw.syntax--inline {
        color: @green;
    }
}

.syntax--source.syntax--gfm .syntax--markup {
    -webkit-font-smoothing: auto;
    &.syntax--heading {
        color: @green;
    }
}

atom-text-editor[mini] .scroll-view {
    padding-left: 1px;
}
